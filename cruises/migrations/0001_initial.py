# Generated by Django 5.0.6 on 2024-11-19 20:53

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CabinCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('capacity', models.PositiveIntegerField()),
                ('deck', models.CharField(max_length=50)),
                ('category_code', models.CharField(max_length=10)),
                ('square_meters', models.DecimalField(decimal_places=2, max_digits=5)),
                ('is_accessible', models.BooleanField(default=False)),
                ('has_balcony', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Cabin Categories',
                'ordering': ['ship', 'deck', 'category_code'],
            },
        ),
        migrations.CreateModel(
            name='Cruise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=220, unique=True)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='cruise_images/')),
                ('image_url', models.URLField(blank=True, max_length=1000, null=True)),
                ('flyer_pdf', models.FileField(blank=True, null=True, upload_to='cruise_flyers/')),
                ('is_featured', models.BooleanField(default=False)),
                ('difficulty_level', models.PositiveIntegerField(default=1, help_text='1 (Easy) to 5 (Challenging)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CruiseCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
                ('description', models.TextField()),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/')),
                ('website', models.URLField(blank=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('fleet_size', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Cruise Companies',
            },
        ),
        migrations.CreateModel(
            name='CruiseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('typical_duration', models.PositiveIntegerField(help_text='Typical duration in days')),
                ('requires_visa', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('name_de', models.CharField(max_length=100, verbose_name='Name (German)')),
                ('name_fr', models.CharField(max_length=100, verbose_name='Name (French)')),
                ('description_de', models.TextField(verbose_name='Description (German)')),
                ('description_fr', models.TextField(verbose_name='Description (French)')),
            ],
            options={
                'verbose_name': 'Equipment',
                'verbose_name_plural': 'Equipment',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Excursion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('duration', models.DurationField(help_text='Duration in hours')),
                ('difficulty_level', models.PositiveIntegerField(default=1, help_text='1 (Easy) to 5 (Challenging)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('minimum_participants', models.PositiveIntegerField(default=1)),
                ('maximum_participants', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('includes_transport', models.BooleanField(default=True)),
                ('includes_meal', models.BooleanField(default=False)),
                ('is_accessible', models.BooleanField(default=False)),
                ('meeting_point', models.CharField(max_length=200)),
                ('what_to_bring', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['port', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('description', models.TextField(blank=True)),
                ('timezone', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'ordering': ['country', 'name'],
                'unique_together': {('name', 'country')},
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('promotion_type', models.CharField(choices=[('early_bird', 'Early Bird'), ('last_minute', 'Last Minute'), ('seasonal', 'Seasonal Special'), ('group', 'Group Discount'), ('loyalty', 'Loyalty Reward')], max_length=50)),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed', 'Fixed Amount'), ('upgrade', 'Cabin Upgrade')], max_length=20)),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('terms_conditions', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
                ('description', models.TextField()),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/')),
                ('website', models.URLField(blank=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('featured', models.BooleanField(default=False)),
                ('market_segment', models.CharField(choices=[('luxury', 'Luxury'), ('premium', 'Premium'), ('contemporary', 'Contemporary'), ('expedition', 'Expedition')], default='contemporary', max_length=20)),
                ('parent_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='brands', to='cruises.cruisecompany')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CruiseSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('capacity', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('booking', 'Booking Open'), ('guaranteed', 'Guaranteed Departure'), ('fully_booked', 'Fully Booked'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('cruise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='cruises.cruise')),
                ('promotion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions', to='cruises.promotion')),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.AddField(
            model_name='cruise',
            name='cruise_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cruises.cruisetype'),
        ),
        migrations.CreateModel(
            name='CabinEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('cabin_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cabin_equipment', to='cruises.cabincategory')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cabin_equipment', to='cruises.equipment')),
            ],
            options={
                'verbose_name': 'Cabin Equipment',
                'verbose_name_plural': 'Cabin Equipment',
                'ordering': ['cabin_category', 'equipment'],
                'unique_together': {('cabin_category', 'equipment')},
            },
        ),
        migrations.AddField(
            model_name='cabincategory',
            name='equipment',
            field=models.ManyToManyField(through='cruises.CabinEquipment', to='cruises.equipment'),
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('location_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cruises.location')),
                ('port_code', models.CharField(blank=True, max_length=10, unique=True)),
                ('is_embarkation_port', models.BooleanField(default=False)),
                ('is_disembarkation_port', models.BooleanField(default=False)),
                ('max_ship_length', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum ship length in meters', max_digits=6, null=True)),
                ('has_customs', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=('cruises.location',),
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('parent_region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_regions', to='cruises.region')),
                ('ports', models.ManyToManyField(related_name='regions', to='cruises.port')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='cruisecompany',
            name='operating_regions',
            field=models.ManyToManyField(related_name='operating_companies', to='cruises.region'),
        ),
        migrations.AddField(
            model_name='cruise',
            name='regions',
            field=models.ManyToManyField(related_name='cruises', to='cruises.region'),
        ),
        migrations.CreateModel(
            name='Ship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('year_built', models.PositiveIntegerField()),
                ('passenger_capacity', models.PositiveIntegerField()),
                ('crew_capacity', models.PositiveIntegerField()),
                ('gross_tonnage', models.PositiveIntegerField()),
                ('length', models.DecimalField(decimal_places=2, max_digits=6)),
                ('speed', models.DecimalField(decimal_places=1, help_text='Maximum speed in knots', max_digits=4)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ships', to='cruises.brand')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ships', to='cruises.cruisecompany')),
            ],
            options={
                'ordering': ['company', 'name'],
                'unique_together': {('name', 'company')},
            },
        ),
        migrations.AddField(
            model_name='cruise',
            name='ship',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cruises', to='cruises.ship'),
        ),
        migrations.AddField(
            model_name='cabincategory',
            name='ship',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cabin_categories', to='cruises.ship'),
        ),
        migrations.CreateModel(
            name='CruiseSessionCabinPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_early_bird', models.BooleanField(default=False)),
                ('early_bird_deadline', models.DateField(blank=True, null=True)),
                ('regular_price', models.DecimalField(decimal_places=2, help_text='Regular price after early bird deadline', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('single_supplement', models.DecimalField(decimal_places=2, default=50, help_text='Single supplement percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('third_person_discount', models.DecimalField(decimal_places=2, default=30, help_text='Third person discount percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('available_cabins', models.PositiveIntegerField(help_text='Number of cabins available in this category')),
                ('cabin_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='session_prices', to='cruises.cabincategory')),
                ('cruise_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cabin_prices', to='cruises.cruisesession')),
            ],
            options={
                'verbose_name': 'Session Cabin Price',
                'verbose_name_plural': 'Session Cabin Prices',
                'ordering': ['cruise_session', 'cabin_category'],
                'indexes': [models.Index(fields=['cruise_session', 'cabin_category'], name='cruises_cru_cruise__c7fdb9_idx'), models.Index(fields=['price'], name='cruises_cru_price_b46adc_idx')],
                'unique_together': {('cruise_session', 'cabin_category')},
            },
        ),
        migrations.CreateModel(
            name='CruiseExcursion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('available_date', models.DateField()),
                ('departure_time', models.TimeField()),
                ('specific_meeting_point', models.CharField(blank=True, help_text='Override default meeting point if different', max_length=200)),
                ('available_spots', models.PositiveIntegerField()),
                ('price_override', models.DecimalField(blank=True, decimal_places=2, help_text='Override default excursion price if different', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('cruise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='excursions', to='cruises.cruise')),
                ('excursion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cruise_excursions', to='cruises.excursion')),
            ],
            options={
                'ordering': ['available_date', 'departure_time'],
                'indexes': [models.Index(fields=['cruise', 'available_date'], name='cruises_cru_cruise__40081b_idx'), models.Index(fields=['available_spots'], name='cruises_cru_availab_355657_idx')],
                'unique_together': {('cruise', 'excursion', 'available_date', 'departure_time')},
            },
        ),
        migrations.AddField(
            model_name='excursion',
            name='port',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='excursions', to='cruises.port'),
        ),
        migrations.AddField(
            model_name='cruisesession',
            name='disembarkation_port',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disembarkation_sessions', to='cruises.port'),
        ),
        migrations.AddField(
            model_name='cruisesession',
            name='embarkation_port',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='embarkation_sessions', to='cruises.port'),
        ),
        migrations.CreateModel(
            name='CruiseItinerary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('day', models.PositiveIntegerField()),
                ('arrival_time', models.TimeField(blank=True, null=True)),
                ('departure_time', models.TimeField(blank=True, null=True)),
                ('description', models.TextField()),
                ('is_sea_day', models.BooleanField(default=False, help_text='Indicate if this is a day at sea')),
                ('cruise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itineraries', to='cruises.cruise')),
                ('port', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='itinerary_stops', to='cruises.port')),
            ],
            options={
                'verbose_name_plural': 'Cruise Itineraries',
                'ordering': ['cruise', 'day'],
            },
        ),
        migrations.AddIndex(
            model_name='cruise',
            index=models.Index(fields=['cruise_type', 'is_featured'], name='cruises_cru_cruise__686869_idx'),
        ),
        migrations.AddIndex(
            model_name='cruise',
            index=models.Index(fields=['ship', 'is_active'], name='cruises_cru_ship_id_d02560_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cabincategory',
            unique_together={('ship', 'category_code')},
        ),
        migrations.AddIndex(
            model_name='excursion',
            index=models.Index(fields=['port', 'name'], name='cruises_exc_port_id_6292f6_idx'),
        ),
        migrations.AddIndex(
            model_name='excursion',
            index=models.Index(fields=['difficulty_level', 'is_accessible'], name='cruises_exc_difficu_4ecd2f_idx'),
        ),
        migrations.AddIndex(
            model_name='cruisesession',
            index=models.Index(fields=['status', 'start_date'], name='cruises_cru_status_28a8ae_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cruisesession',
            unique_together={('cruise', 'start_date')},
        ),
        migrations.AddIndex(
            model_name='cruiseitinerary',
            index=models.Index(fields=['cruise', 'day'], name='cruises_cru_cruise__7e7cf3_idx'),
        ),
        migrations.AddIndex(
            model_name='cruiseitinerary',
            index=models.Index(fields=['port', 'arrival_time'], name='cruises_cru_port_id_79ad6b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cruiseitinerary',
            unique_together={('cruise', 'day')},
        ),
    ]
